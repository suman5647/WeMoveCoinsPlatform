function findPrimes(n){for(var r,u,t=new Array(n),i=0;i<n;i++)t[i]=0;for(t[0]=2,r=0;t[r]<n;){for(i=t[r]*t[r];i<n;i+=t[r])t[i]=1;for(r++,t[r]=t[r-1]+1;t[r]<n&&t[t[r]];t[r]++);}for(u=new Array(r),i=0;i<r;i++)u[i]=t[i];return u}function millerRabinInt(n,t){return mr_x1.length!=n.length&&(mr_x1=dup(n),mr_r=dup(n),mr_a=dup(n)),copyInt_(mr_a,t),millerRabin(n,mr_a)}function millerRabin(n,t){var r,i,u,f;for(mr_x1.length!=n.length&&(mr_x1=dup(n),mr_r=dup(n),mr_a=dup(n)),copy_(mr_a,t),copy_(mr_r,n),copy_(mr_x1,n),addInt_(mr_r,-1),addInt_(mr_x1,-1),u=0,r=0;r<mr_r.length;r++)for(i=1;i<mask;i<<=1)n[r]&i?(f=u<mr_r.length+bpe?u:0,r=mr_r.length,i=mask):u++;if(f&&rightShift_(mr_r,f),powMod_(mr_a,mr_r,n),!equalsInt(mr_a,1)&&!equals(mr_a,mr_x1)){for(i=1;i<=f-1&&!equals(mr_a,mr_x1);){if(squareMod_(mr_a,n),equalsInt(mr_a,1))return 0;i++}if(!equals(mr_a,mr_x1))return 0}return 1}function bitSize(n){for(var i,r,t=n.length-1;n[t]==0&&t>0;t--);for(i=0,r=n[t];r;r>>=1,i++);return i+bpe*t}function expand(n,t){var i=int2bigInt(0,(n.length>t?n.length:t)*bpe,0);return copy_(i,n),i}function randTruePrime(n){var t=int2bigInt(0,n,0);return randTruePrime_(t,n),trim(t,1)}function randProbPrime(n){return n>=600?randProbPrimeRounds(n,2):n>=550?randProbPrimeRounds(n,4):n>=500?randProbPrimeRounds(n,5):n>=400?randProbPrimeRounds(n,6):n>=350?randProbPrimeRounds(n,7):n>=300?randProbPrimeRounds(n,9):n>=250?randProbPrimeRounds(n,12):n>=200?randProbPrimeRounds(n,15):n>=150?randProbPrimeRounds(n,18):n>=100?randProbPrimeRounds(n,27):randProbPrimeRounds(n,40)}function randProbPrimeRounds(n,t){var i,r,u,f;for(f=3e4,i=int2bigInt(0,n,0),primes.length==0&&(primes=findPrimes(3e4)),rpprb.length!=i.length&&(rpprb=dup(i));;){for(randBigInt_(i,n,0),i[0]|=1,u=0,r=0;r<primes.length&&primes[r]<=f;r++)if(modInt(i,primes[r])==0&&!equalsInt(i,primes[r])){u=1;break}for(r=0;r<t&&!u;r++){for(randBigInt_(rpprb,n,0);!greater(i,rpprb);)randBigInt_(rpprb,n,0);millerRabin(i,rpprb)||(u=1)}if(!u)return i}}function mod(n,t){var i=dup(n);return mod_(i,t),trim(i,1)}function addInt(n,t){var i=expand(n,n.length+1);return addInt_(i,t),trim(i,1)}function mult(n,t){var i=expand(n,n.length+t.length);return mult_(i,t),trim(i,1)}function powMod(n,t,i){var r=expand(n,i.length);return powMod_(r,trim(t,2),trim(i,2),0),trim(r,1)}function sub(n,t){var i=expand(n,n.length>t.length?n.length+1:t.length+1);return sub_(i,t),trim(i,1)}function add(n,t){var i=expand(n,n.length>t.length?n.length+1:t.length+1);return add_(i,t),trim(i,1)}function inverseMod(n,t){var i=expand(n,t.length),r;return r=inverseMod_(i,t),r?trim(i,1):null}function multMod(n,t,i){var r=expand(n,i.length);return multMod_(r,t,i),trim(r,1)}function randTruePrime_(n,t){var s,o,h,f,i,r,c,u,l,e,a;if(primes.length==0&&(primes=findPrimes(3e4)),pows.length==0)for(pows=new Array(512),i=0;i<512;i++)pows[i]=Math.pow(2,i/511-1);if(s=.1,o=20,recLimit=20,s_i2.length!=n.length&&(s_i2=dup(n),s_R=dup(n),s_n1=dup(n),s_r2=dup(n),s_d=dup(n),s_x1=dup(n),s_x2=dup(n),s_b=dup(n),s_n=dup(n),s_i=dup(n),s_rm=dup(n),s_q=dup(n),s_a=dup(n),s_aa=dup(n)),t<=recLimit){for(h=(1<<(t+2>>1))-1,copyInt_(n,0),f=1;f;)for(f=0,n[0]=1|1<<t-1|Math.floor(Math.random()*(1<<t)),i=1;i<primes.length&&(primes[i]&h)==primes[i];i++)if(0==n[0]%primes[i]){f=1;break}carry_(n);return}if(c=s*t*t,t>2*o)for(r=1;t-t*r<=o;)r=pows[Math.floor(Math.random()*512)];else r=.5;for(a=Math.floor(r*t)+1,randTruePrime_(s_q,a),copyInt_(s_i2,0),s_i2[Math.floor((t-2)/bpe)]|=1<<(t-2)%bpe,divide_(s_i2,s_q,s_i,s_rm),l=bitSize(s_i);;){for(;;)if(randBigInt_(s_R,l,0),greater(s_i,s_R))break;for(addInt_(s_R,1),add_(s_R,s_i),copy_(s_n,s_q),mult_(s_n,s_R),multInt_(s_n,2),addInt_(s_n,1),copy_(s_r2,s_R),multInt_(s_r2,2),u=0,i=0;i<primes.length&&primes[i]<c;i++)if(modInt(s_n,primes[i])==0&&!equalsInt(s_n,primes[i])){u=1;break}if(u||millerRabinInt(s_n,2)||(u=1),!u){for(addInt_(s_n,-3),i=s_n.length-1;s_n[i]==0&&i>0;i--);for(e=0,w=s_n[i];w;w>>=1,e++);for(e+=bpe*i;;)if(randBigInt_(s_a,e,0),greater(s_n,s_a))break;if(addInt_(s_n,3),addInt_(s_a,2),copy_(s_b,s_a),copy_(s_n1,s_n),addInt_(s_n1,-1),powMod_(s_b,s_n1,s_n),addInt_(s_b,-1),isZero(s_b)&&(copy_(s_b,s_a),powMod_(s_b,s_r2,s_n),addInt_(s_b,-1),copy_(s_aa,s_n),copy_(s_d,s_b),GCD_(s_d,s_n),equalsInt(s_d,1))){copy_(n,s_aa);return}}}}function randBigInt(n,t){var r,i;return r=Math.floor((n-1)/bpe)+2,i=int2bigInt(0,0,r),randBigInt_(i,n,t),i}function randBigInt_(n,t,i){for(var u,r=0;r<n.length;r++)n[r]=0;for(u=Math.floor((t-1)/bpe)+1,r=0;r<u;r++)n[r]=Math.floor(Math.random()*(1<<bpe-1));n[u-1]&=(2<<(t-1)%bpe)-1;i==1&&(n[u-1]|=1<<(t-1)%bpe)}function GCD(n,t){var i,r;return i=dup(n),r=dup(t),GCD_(i,r),i}function GCD_(n,i){var r,s,u,h,o,f,e,c,l;for(T.length!=n.length&&(T=dup(n)),l=1;l;){for(l=0,r=1;r<i.length;r++)if(i[r]){l=1;break}if(!l)break;for(r=n.length;!n[r]&&r>=0;r--);for(s=n[r],u=i[r],h=1,o=0,f=0,e=1;u+f&&u+e;){if(c=Math.floor((s+h)/(u+f)),qp=Math.floor((s+o)/(u+e)),c!=qp)break;t=h-c*f;h=f;f=t;t=o-c*e;o=e;e=t;t=s-c*u;s=u;u=t}o?(copy_(T,n),linComb_(n,i,h,o),linComb_(i,T,e,f)):(mod_(n,i),copy_(T,n),copy_(n,i),copy_(i,T))}if(i[0]!=0)for(t=modInt(n,i[0]),copyInt_(n,i[0]),i[0]=t;i[0];)n[0]%=i[0],t=n[0],n[0]=i[0],i[0]=t}function inverseMod_(n,t){var i=1+2*Math.max(n.length,t.length);if(!(n[0]&1)&&!(t[0]&1))return copyInt_(n,0),0;for(eg_u.length!=i&&(eg_u=new Array(i),eg_v=new Array(i),eg_A=new Array(i),eg_B=new Array(i),eg_C=new Array(i),eg_D=new Array(i)),copy_(eg_u,n),copy_(eg_v,t),copyInt_(eg_A,1),copyInt_(eg_B,0),copyInt_(eg_C,0),copyInt_(eg_D,1);;){while(!(eg_u[0]&1))halve_(eg_u),eg_A[0]&1||eg_B[0]&1?(add_(eg_A,t),halve_(eg_A),sub_(eg_B,n),halve_(eg_B)):(halve_(eg_A),halve_(eg_B));while(!(eg_v[0]&1))halve_(eg_v),eg_C[0]&1||eg_D[0]&1?(add_(eg_C,t),halve_(eg_C),sub_(eg_D,n),halve_(eg_D)):(halve_(eg_C),halve_(eg_D));if(greater(eg_v,eg_u)?(sub_(eg_v,eg_u),sub_(eg_C,eg_A),sub_(eg_D,eg_B)):(sub_(eg_u,eg_v),sub_(eg_A,eg_C),sub_(eg_B,eg_D)),equalsInt(eg_u,0))return(negative(eg_C)&&add_(eg_C,t),copy_(n,eg_C),!equalsInt(eg_v,1))?(copyInt_(n,0),0):1}}function inverseModInt(n,t){for(var i=1,r=0;;){if(n==1)return i;if(n==0)return 0;if(r-=i*Math.floor(t/n),t%=n,t==1)return r;if(t==0)return 0;i-=r*Math.floor(n/t);n%=t}}function inverseModInt_(n,t){return inverseModInt(n,t)}function eGCD_(n,t,i,r,u){var e=0,f=Math.max(n.length,t.length);for(eg_u.length!=f&&(eg_u=new Array(f),eg_A=new Array(f),eg_B=new Array(f),eg_C=new Array(f),eg_D=new Array(f));!(n[0]&1)&&!(t[0]&1);)halve_(n),halve_(t),e++;for(copy_(eg_u,n),copy_(i,t),copyInt_(eg_A,1),copyInt_(eg_B,0),copyInt_(eg_C,0),copyInt_(eg_D,1);;){while(!(eg_u[0]&1))halve_(eg_u),eg_A[0]&1||eg_B[0]&1?(add_(eg_A,t),halve_(eg_A),sub_(eg_B,n),halve_(eg_B)):(halve_(eg_A),halve_(eg_B));while(!(i[0]&1))halve_(i),eg_C[0]&1||eg_D[0]&1?(add_(eg_C,t),halve_(eg_C),sub_(eg_D,n),halve_(eg_D)):(halve_(eg_C),halve_(eg_D));if(greater(i,eg_u)?(sub_(i,eg_u),sub_(eg_C,eg_A),sub_(eg_D,eg_B)):(sub_(eg_u,i),sub_(eg_A,eg_C),sub_(eg_B,eg_D)),equalsInt(eg_u,0)){negative(eg_C)&&(add_(eg_C,t),sub_(eg_D,n));multInt_(eg_D,-1);copy_(r,eg_C);copy_(u,eg_D);leftShift_(i,e);return}}}function negative(n){return n[n.length-1]>>bpe-1&1}function greaterShift(n,t,i){var r,u=n.length,f=t.length;for(k=u+i<f?u+i:f,r=f-1-i;r<u&&r>=0;r++)if(n[r]>0)return 1;for(r=u-1+i;r<f;r++)if(t[r]>0)return 0;for(r=k-1;r>=i;r--){if(n[r-i]>t[r])return 1;if(n[r-i]<t[r])return 0}return 0}function greater(n,t){for(var r=n.length<t.length?n.length:t.length,i=n.length;i<t.length;i++)if(t[i])return 0;for(i=t.length;i<n.length;i++)if(n[i])return 1;for(i=r-1;i>=0;i--){if(n[i]>t[i])return 1;if(n[i]<t[i])return 0}return 0}function divide_(n,t,i,r){var e,u,f,s,h,c,o,l;for(copy_(r,n),u=t.length;t[u-1]==0;u--);for(l=t[u-1],o=0;l;o++)l>>=1;for(o=bpe-o,leftShift_(t,o),leftShift_(r,o),e=r.length;r[e-1]==0&&e>u;e--);for(copyInt_(i,0);!greaterShift(t,r,e-u);)subShift_(r,t,e-u),i[e-u]++;for(f=e-1;f>=u;f--){for(i[f-u]=r[f]==t[u-1]?mask:Math.floor((r[f]*radix+r[f-1])/t[u-1]);;)if(h=(u>1?t[u-2]:0)*i[f-u],c=h>>bpe,h=h&mask,s=c+i[f-u]*t[u-1],c=s>>bpe,s=s&mask,c==r[f]?s==r[f-1]?h>(f>1?r[f-2]:0):s>r[f-1]:c>r[f])i[f-u]--;else break;linCombShift_(r,t,-i[f-u],f-u);negative(r)&&(addShift_(r,t,f-u),i[f-u]--)}rightShift_(t,o);rightShift_(r,o)}function carry_(n){var i,u,t,r;for(u=n.length,t=0,i=0;i<u;i++)t+=n[i],r=0,t<0&&(r=-(t>>bpe),t+=r*radix),n[i]=t&mask,t=(t>>bpe)-r}function modInt(n,t){for(var r=0,i=n.length-1;i>=0;i--)r=(r*radix+n[i])%t;return r}function int2bigInt(n,t,i){var r;return r=Math.ceil(t/bpe)+1,r=i>r?i:r,buff=new Array(r),copyInt_(buff,n),buff}function str2bigInt(n,t,i){var o,r,u,e,s,f=n.length;if(t==-1){for(u=new Array(0);;){for(e=new Array(u.length+1),r=0;r<u.length;r++)e[r+1]=u[r];if(e[0]=parseInt(n,10),u=e,o=n.indexOf(",",0),o<1)break;if(n=n.substring(o+1),n.length==0)break}return u.length<i?(e=new Array(i),copy_(e,u),e):u}for(u=int2bigInt(0,t*f,0),r=0;r<f;r++){if(o=digitsStr.indexOf(n.substring(r,r+1),0),t<=36&&o>=36&&(o-=26),o>=t||o<0)break;multInt_(u,t);addInt_(u,o)}for(f=u.length;f>0&&!u[f-1];f--);for(f=i>f+1?i:f+1,e=new Array(f),s=f<u.length?f:u.length,r=0;r<s;r++)e[r]=u[r];for(;r<f;r++)e[r]=0;return e}function equalsInt(n,t){var i;if(n[0]!=t)return 0;for(i=1;i<n.length;i++)if(n[i])return 0;return 1}function equals(n,t){for(var r=n.length<t.length?n.length:t.length,i=0;i<r;i++)if(n[i]!=t[i])return 0;if(n.length>t.length){for(;i<n.length;i++)if(n[i])return 0}else for(;i<t.length;i++)if(t[i])return 0;return 1}function isZero(n){for(var t=0;t<n.length;t++)if(n[t])return 0;return 1}function bigInt2str(n,t){var r,u,i="";if(s6.length!=n.length?s6=dup(n):copy_(s6,n),t==-1){for(r=n.length-1;r>0;r--)i+=n[r]+",";i+=n[0]}else while(!isZero(s6))u=divInt_(s6,t),i=digitsStr.substring(u,u+1)+i;return i.length==0&&(i="0"),i}function dup(n){return buff=new Array(n.length),copy_(buff,n),buff}function copy_(n,t){for(var r=n.length<t.length?n.length:t.length,i=0;i<r;i++)n[i]=t[i];for(i=r;i<n.length;i++)n[i]=0}function copyInt_(n,t){for(var r=t,i=0;i<n.length;i++)n[i]=r&mask,r>>=bpe}function addInt_(n,t){var r,f,i,u;for(n[0]+=t,f=n.length,i=0,r=0;r<f;r++)if(i+=n[r],u=0,i<0&&(u=-(i>>bpe),i+=u*radix),n[r]=i&mask,i=(i>>bpe)-u,!i)return}function rightShift_(n,t){var i,r=Math.floor(t/bpe);if(r){for(i=0;i<n.length-r;i++)n[i]=n[i+r];for(;i<n.length;i++)n[i]=0;t%=bpe}for(i=0;i<n.length-1;i++)n[i]=mask&(n[i+1]<<bpe-t|n[i]>>t);n[i]>>=t}function halve_(n){for(var t=0;t<n.length-1;t++)n[t]=mask&(n[t+1]<<bpe-1|n[t]>>1);n[t]=n[t]>>1|n[t]&radix>>1}function leftShift_(n,t){var i,r=Math.floor(t/bpe);if(r){for(i=n.length;i>=r;i--)n[i]=n[i-r];for(;i>=0;i--)n[i]=0;t%=bpe}if(t){for(i=n.length-1;i>0;i--)n[i]=mask&(n[i]<<t|n[i-1]>>bpe-t);n[i]=mask&n[i]<<t}}function multInt_(n,t){var r,f,i,u;if(t)for(f=n.length,i=0,r=0;r<f;r++)i+=n[r]*t,u=0,i<0&&(u=-(i>>bpe),i+=u*radix),n[r]=i&mask,i=(i>>bpe)-u}function divInt_(n,t){for(var r=0,u,i=n.length-1;i>=0;i--)u=r*radix+n[i],n[i]=Math.floor(u/t),r=u%t;return r}function linComb_(n,t,i,r){var u,f,e,o;for(e=n.length<t.length?n.length:t.length,o=n.length,f=0,u=0;u<e;u++)f+=i*n[u]+r*t[u],n[u]=f&mask,f>>=bpe;for(u=e;u<o;u++)f+=i*n[u],n[u]=f&mask,f>>=bpe}function linCombShift_(n,t,i,r){var u,f,e,o;for(e=n.length<r+t.length?n.length:r+t.length,o=n.length,f=0,u=r;u<e;u++)f+=n[u]+i*t[u-r],n[u]=f&mask,f>>=bpe;for(u=e;f&&u<o;u++)f+=n[u],n[u]=f&mask,f>>=bpe}function addShift_(n,t,i){var r,u,f,e;for(f=n.length<i+t.length?n.length:i+t.length,e=n.length,u=0,r=i;r<f;r++)u+=n[r]+t[r-i],n[r]=u&mask,u>>=bpe;for(r=f;u&&r<e;r++)u+=n[r],n[r]=u&mask,u>>=bpe}function subShift_(n,t,i){var r,u,f,e;for(f=n.length<i+t.length?n.length:i+t.length,e=n.length,u=0,r=i;r<f;r++)u+=n[r]-t[r-i],n[r]=u&mask,u>>=bpe;for(r=f;u&&r<e;r++)u+=n[r],n[r]=u&mask,u>>=bpe}function sub_(n,t){var i,r,u;for(u=n.length<t.length?n.length:t.length,r=0,i=0;i<u;i++)r+=n[i]-t[i],n[i]=r&mask,r>>=bpe;for(i=u;r&&i<n.length;i++)r+=n[i],n[i]=r&mask,r>>=bpe}function add_(n,t){var i,r,u;for(u=n.length<t.length?n.length:t.length,r=0,i=0;i<u;i++)r+=n[i]+t[i],n[i]=r&mask,r>>=bpe;for(i=u;r&&i<n.length;i++)r+=n[i],n[i]=r&mask,r>>=bpe}function mult_(n,t){var i;for(ss.length!=2*n.length&&(ss=new Array(2*n.length)),copyInt_(ss,0),i=0;i<t.length;i++)t[i]&&linCombShift_(ss,n,t[i],i);copy_(n,ss)}function mod_(n,t){s4.length!=n.length?s4=dup(n):copy_(s4,n);s5.length!=n.length&&(s5=dup(n));divide_(s4,t,s5,n)}function multMod_(n,t,i){var r;for(s0.length!=2*n.length&&(s0=new Array(2*n.length)),copyInt_(s0,0),r=0;r<t.length;r++)t[r]&&linCombShift_(s0,n,t[r],r);mod_(s0,i);copy_(n,s0)}function squareMod_(n,t){for(var i,f,u,e,r=n.length;r>0&&!n[r-1];r--);for(e=r>t.length?2*r:2*t.length,s0.length!=e&&(s0=new Array(e)),copyInt_(s0,0),i=0;i<r;i++){for(u=s0[2*i]+n[i]*n[i],s0[2*i]=u&mask,u>>=bpe,f=i+1;f<r;f++)u=s0[i+f]+2*n[i]*n[f]+u,s0[i+f]=u&mask,u>>=bpe;s0[i+r]=u}mod_(s0,t);copy_(n,s0)}function trim(n,t){for(var r,i=n.length;i>0&&!n[i-1];i--);return r=new Array(i+t),copy_(r,n),r}function powMod_(n,t,i){var r,u,f,e;if(s7.length!=i.length&&(s7=dup(i)),(i[0]&1)==0){for(copy_(s7,n),copyInt_(n,1);!equalsInt(t,0);)t[0]&1&&multMod_(n,s7,i),divInt_(t,2),squareMod_(s7,i);return}for(copyInt_(s7,0),f=i.length;f>0&&!i[f-1];f--);for(e=radix-inverseModInt(modInt(i,radix),radix),s7[f]=1,multMod_(n,s7,i),s3.length!=n.length?s3=dup(n):copy_(s3,n),r=t.length-1;r>0&!t[r];r--);if(t[r]==0){copyInt_(n,1);return}for(u=1<<bpe-1;u&&!(t[r]&u);u>>=1);for(;;){if(!(u>>=1)){if(r--,r<0){mont_(n,one,i,e);return}u=1<<bpe-1}mont_(n,n,i,e);u&t[r]&&mont_(n,s3,i,e)}}function mont_(n,t,i,r){var h,u,f,e,o,l,s=i.length,c=t.length;for(sa.length!=s&&(sa=new Array(s)),copyInt_(sa,0);s>0&&i[s-1]==0;s--);for(;c>0&&t[c-1]==0;c--);for(l=sa.length-1,h=0;h<s;h++){for(o=sa[0]+n[h]*t[0],e=(o&mask)*r&mask,f=o+e*i[0]>>bpe,o=n[h],u=1;u<c-4;)f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++;for(;u<c;)f+=sa[u]+e*i[u]+o*t[u],sa[u-1]=f&mask,f>>=bpe,u++;for(;u<s-4;)f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++,f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++;for(;u<s;)f+=sa[u]+e*i[u],sa[u-1]=f&mask,f>>=bpe,u++;for(;u<l;)f+=sa[u],sa[u-1]=f&mask,f>>=bpe,u++;sa[u-1]=f&mask}greater(i,sa)||sub_(sa,i);copy_(n,sa)}for(bpe=0,mask=0,radix=mask+1,digitsStr="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\'\"+-",bpe=0;1<<bpe+1>1<<bpe;bpe++);bpe>>=1;mask=(1<<bpe)-1;radix=mask+1;one=int2bigInt(1,1,1);t=new Array(0);ss=t;s0=t;s1=t;s2=t;s3=t;s4=t;s5=t;s6=t;s7=t;T=t;sa=t;mr_x1=t;mr_r=t;mr_a=t;eg_v=t;eg_u=t;eg_A=t;eg_B=t;eg_C=t;eg_D=t;md_q1=t;md_q2=t;md_q3=t;md_r=t;md_r1=t;md_r2=t;md_tt=t;primes=t;pows=t;s_i=t;s_i2=t;s_R=t;s_rm=t;s_q=t;s_n1=t;s_a=t;s_r2=t;s_n=t;s_b=t;s_d=t;s_x1=t;s_x2=t;s_aa=t;rpprb=t;