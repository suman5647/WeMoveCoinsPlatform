using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WMC.Logic
{
    public class AuditTrailCleanUp
    {
        private static List<String> logsToBeCleanedUp;
        public AuditTrailCleanUp()
        {
            logsToBeCleanedUp = new List<string>();
            logsToBeCleanedUp.Add("BitGo session is locked.");
            logsToBeCleanedUp.Add("There is no Culture in ResolveCountry()");
            logsToBeCleanedUp.Add("User PaymentMethod Details for user with phone number");
            logsToBeCleanedUp.Add("New Rate updated from Kraken orderbook.");
            logsToBeCleanedUp.Add("BitGo session is locked.");
            logsToBeCleanedUp.Add("Error in placing order.");
            logsToBeCleanedUp.Add("Error in getting user language.");
            logsToBeCleanedUp.Add("There is no Culture in ResolveCountry()");
            logsToBeCleanedUp.Add("Old amountInBTC:");
            logsToBeCleanedUp.Add("Calculated GetCommissionPercent");
            logsToBeCleanedUp.Add("CalculatePaymentGatewayType");
            logsToBeCleanedUp.Add("Updated user PhoneVerificationCode");
            logsToBeCleanedUp.Add("Updated Order(");
            logsToBeCleanedUp.Add("Caller Id response for phone number");
            logsToBeCleanedUp.Add("Order submitted by user with phone number");
            logsToBeCleanedUp.Add("Payment made by user with phone number");
            logsToBeCleanedUp.Add("Logged in by new user with phone number");
            logsToBeCleanedUp.Add("Logged in by existing user with phone number");
            logsToBeCleanedUp.Add("SendBTC Response. Response Content");
            logsToBeCleanedUp.Add("Yourpay CapturePayment Response");
            logsToBeCleanedUp.Add("BitGo session is locked.");
            logsToBeCleanedUp.Add("Insufficient balance for sending BTC.");
            logsToBeCleanedUp.Add("New Rate updated from Kraken orderbook.");
            logsToBeCleanedUp.Add("Error in GetCountryCodeFromUserIP()");
            logsToBeCleanedUp.Add("Paylike CapturePayment Response: {\"IsError\"");
            logsToBeCleanedUp.Add("Paylike CapturePayment Error Response:");
            logsToBeCleanedUp.Add("Paylike ReleasePayment Response:");
            logsToBeCleanedUp.Add("Paylike ReleasePayment Error Response:");
            logsToBeCleanedUp.Add("Historical payment detail made by user with phone number");
            logsToBeCleanedUp.Add("RequestTxSecret.htm");
            logsToBeCleanedUp.Add("Reset IPInfo Session Data.");
            logsToBeCleanedUp.Add("Error in getting user language.");
            logsToBeCleanedUp.Add("Unable to find language resource for site");
            logsToBeCleanedUp.Add("Error in LatestBTCRate");
            logsToBeCleanedUp.Add("IPInfoJSONData:");
            logsToBeCleanedUp.Add("Order Service Started");
            logsToBeCleanedUp.Add("Order Service Stopped");
            logsToBeCleanedUp.Add("Currency USD does not exist for user with phone");
            logsToBeCleanedUp.Add("Decline - US Card");
            logsToBeCleanedUp.Add("RequestKycDocuments.htm");
            logsToBeCleanedUp.Add("New OrderAmount:");
            logsToBeCleanedUp.Add("eurAmount:");
            logsToBeCleanedUp.Add("BitGo session is Unauthorized. Use correct AccessCode or reset expired AccessCode");
            logsToBeCleanedUp.Add("Approved");
            logsToBeCleanedUp.Add("Ask for Tx Secret");
            logsToBeCleanedUp.Add("Manual Approval:");
            logsToBeCleanedUp.Add("SendEmail parameter");
            logsToBeCleanedUp.Add("Calculated commission for user phone");
            logsToBeCleanedUp.Add(String.Format("{ \"Sid\":null"));
            logsToBeCleanedUp.Add(String.Format("{\"Sid\":\""));
            logsToBeCleanedUp.Add("Updated phone verification code is null");
            logsToBeCleanedUp.Add("Uploaded Kyc file for user Phone number ");
            logsToBeCleanedUp.Add("Error in Jobs in App. Exception details ");
            logsToBeCleanedUp.Add("Error occured in GetBTCEURRate() ");
            logsToBeCleanedUp.Add("Error in TrustLevelCalculation(");
            logsToBeCleanedUp.Add("ProcessOrderAwaitsApproval()");
            logsToBeCleanedUp.Add("entered incorrect Txsecret code ");
            logsToBeCleanedUp.Add("exceeded the credit card verification attempt with txsecret ");
            logsToBeCleanedUp.Add("is empty.\r\nVerification(");
            logsToBeCleanedUp.Add("is not valid or does not exist.\r\nVerification(");
            logsToBeCleanedUp.Add("is not valid.\r\nVerification(");
            logsToBeCleanedUp.Add("trying to access payment procedure before verifying phone number.");
            logsToBeCleanedUp.Add("Bitcoin Address");
            logsToBeCleanedUp.Add("BitGo session is locked.");
            logsToBeCleanedUp.Add("BitGo session is Unauthorized. Use correct AccessCode or reset expired AccessCode.");
            logsToBeCleanedUp.Add("Calculated bitgo miners fee details: ");
            logsToBeCleanedUp.Add("Calculated GetCommissionPercent(");
            logsToBeCleanedUp.Add("Calculated GetKYCRequirement(");
            logsToBeCleanedUp.Add("Updated Order Status at ProcessKYC() to KYCApprovalPending while processing KYC for the");
            logsToBeCleanedUp.Add("Caller Id response for phone number ");
            logsToBeCleanedUp.Add("Chainalysis ReceivedOutputs API call at BitGo Webhook. ");
            logsToBeCleanedUp.Add("WebHook Executed |");
            logsToBeCleanedUp.Add("Created new order(");
            logsToBeCleanedUp.Add("Credit card KYC File Removed id is ");
            logsToBeCleanedUp.Add("Credit card reservation amount does not matches with order.");
            logsToBeCleanedUp.Add("Debugger2 ");
            logsToBeCleanedUp.Add("Debugger3 ");
            logsToBeCleanedUp.Add("Digital Currency not found!!");
            logsToBeCleanedUp.Add("Error in Accept(");
            logsToBeCleanedUp.Add("Error in App Start. Exception details : ");
            logsToBeCleanedUp.Add("Error in BitcoinAddressConfirmationView():\r\n");
            logsToBeCleanedUp.Add("Error in BitGoWebHook():");
            logsToBeCleanedUp.Add("Error in CapturePayment() ");
            logsToBeCleanedUp.Add("Error in CheckIfPaid():\r\n");
            logsToBeCleanedUp.Add("Error in CreditCardKYCFileUpload():\r\n");
            logsToBeCleanedUp.Add("Error in CryptoCurrencyPaymentInfo(). BitGo session is Unauthorized.");
            logsToBeCleanedUp.Add("Error in CryptoCurrencyPaymentInfo():");
            logsToBeCleanedUp.Add("Error in CurrencyChanged(");
            logsToBeCleanedUp.Add("Error in DeleteCreditCardKYCFile(");
            logsToBeCleanedUp.Add("Error in DeleteKYCFile(");
            logsToBeCleanedUp.Add("Error in GetCountryCodeFromUserIP()\r\nIPInfoJSONData Session: ");
            logsToBeCleanedUp.Add("Error in getCurrentSite():\r\n");
            logsToBeCleanedUp.Add("Error in getting user language.");
            logsToBeCleanedUp.Add("Error in Index():\r\n");
            logsToBeCleanedUp.Add("Error in Job ");
            logsToBeCleanedUp.Add("Error in Jobs in App. Exception details : ");
            logsToBeCleanedUp.Add("Error in KYCFileUpload():\r\n");
            logsToBeCleanedUp.Add("Error in LatestBTCNumericRate(");
            logsToBeCleanedUp.Add("Error in LatestBTCRate():\r\n currency:");
            logsToBeCleanedUp.Add("Error in LatestBTCRate2(");
            logsToBeCleanedUp.Add("Error in NotifyOrderComplete() ");
            logsToBeCleanedUp.Add("Error in OrderBookVsTickerRate():\r\n");
            logsToBeCleanedUp.Add("Error in PayLike Accept(");
            logsToBeCleanedUp.Add("Error in PayLike Receipt(");
            logsToBeCleanedUp.Add("Error in PaymentMethodChanged(");
            logsToBeCleanedUp.Add("Error in ProcessCancelledOrders() ");
            logsToBeCleanedUp.Add("Error in ProcessKYCDecline() ");
            logsToBeCleanedUp.Add("Error in ProcessOrder(): ");
            logsToBeCleanedUp.Add("Error in ProcessOrderApproval(): ");
            logsToBeCleanedUp.Add("Error in ProcessOrderAwaitsApproval(): ");
            logsToBeCleanedUp.Add("Error in ProcressKYCRequest() ");
            logsToBeCleanedUp.Add("Error in QRCode(");
            logsToBeCleanedUp.Add("Error in Receipt(): \r\n");
            logsToBeCleanedUp.Add("Error in ResendVerificationCode(");
            logsToBeCleanedUp.Add("Error in SaveIBAN(): IBAN:");
            logsToBeCleanedUp.Add("Error in SendCreditCardDocumentPushOver():\r\n");
            logsToBeCleanedUp.Add("Error in SendVerificationCode()\r\n: ");
            logsToBeCleanedUp.Add("Error in setTCUrl(). Count of UserLanguages ");
            logsToBeCleanedUp.Add("Error in SubmitIdentityVerification(): ");
            logsToBeCleanedUp.Add("Error in TrustCalculationExecution(");
            logsToBeCleanedUp.Add("Error in TrustLevelCalculation(");
            logsToBeCleanedUp.Add("Error in ValidateCouponCode(");
            logsToBeCleanedUp.Add("Error in validating payment process for order with phone number ");
            logsToBeCleanedUp.Add("Error in validating payment process, rejected by credit card processor");
            logsToBeCleanedUp.Add("Error in Verification(");
            logsToBeCleanedUp.Add("Error in Verification(). Error in reading SitePaymentMethodDetails from AppSettings for user phone ");
            logsToBeCleanedUp.Add("Error in VerifyPhoneNumber(");
            logsToBeCleanedUp.Add("Error sending BTC. Request Content: ");
            logsToBeCleanedUp.Add("Error while Creating specific Culture based on Language in ResolveCulture().");
            logsToBeCleanedUp.Add("Error while listing transactions in TransactionList()");
            logsToBeCleanedUp.Add("Error while listing YourPayTransactionsOutgoingOverviewList in TransactionsOutgoingOverview()");
            logsToBeCleanedUp.Add("Error while listing YourPayTransactionsOutgoingSpecifiedList in TransactionsOutgoingSpecified()");
            logsToBeCleanedUp.Add("Error while processing KYC. ");
            logsToBeCleanedUp.Add("eurAmount:");
            logsToBeCleanedUp.Add("Executed BitGoWebHook(");
            logsToBeCleanedUp.Add("For Useridentity ");
            logsToBeCleanedUp.Add("Insufficient balance for sending BTC. Current wallet(");
            logsToBeCleanedUp.Add("Invalid paymentGatewayType");
            logsToBeCleanedUp.Add("IPInfoJSONData:");
            logsToBeCleanedUp.Add("KYC decline cannot be processed because the order is already paid out.");
            logsToBeCleanedUp.Add("KYC File Removed id is ");
            logsToBeCleanedUp.Add("KYC files are null in CreditCardKYCFileUpload().");
            logsToBeCleanedUp.Add("KYC files are null in KYCFileUpload().");
            logsToBeCleanedUp.Add("KYC FileType 3 is null in CreditCardKYCFileUpload().");
            logsToBeCleanedUp.Add("No credit card reservation made for order.");
            logsToBeCleanedUp.Add("No customer response pending for order with user identity ");
            logsToBeCleanedUp.Add("NOT SUCCESSFULL OrderComplianceInspection Notification - TrustCalculationExecution");
            logsToBeCleanedUp.Add("NOT SUCCESSFULL Tx-Secret Request - TrustCalculationExecution");
            logsToBeCleanedUp.Add("Old amountInBTC:");
            logsToBeCleanedUp.Add("OperationalStatus is not defined in AppSettings in the database.");
            logsToBeCleanedUp.Add("Order amount boundary(Min: ");
            logsToBeCleanedUp.Add("Order cannot be canceled because the order is already paid out.");
            logsToBeCleanedUp.Add("Order confirmations: ");
            logsToBeCleanedUp.Add("Order CreditCardUserIdentity is null");
            logsToBeCleanedUp.Add("Order is already paid out.");
            logsToBeCleanedUp.Add("Order Service Started");
            logsToBeCleanedUp.Add("Order Service Stopped");
            logsToBeCleanedUp.Add("Order status changed to Payout Awaits Approval.");
            logsToBeCleanedUp.Add("Order status set to Cancel, Order #");
            logsToBeCleanedUp.Add("Order submitted by user with phone number ");
            logsToBeCleanedUp.Add("Order updated at BitGo Webhook. \r\nOrder details :\r\n");
            logsToBeCleanedUp.Add("Paylike CapturePayment Error Response: ");
            logsToBeCleanedUp.Add("Paylike CapturePayment Response: ");
            logsToBeCleanedUp.Add("Paylike ReleasePayment Error Response: ");
            logsToBeCleanedUp.Add("Paylike ReleasePayment Response: ");
            logsToBeCleanedUp.Add("PayLikeProdDetails is not defined in the database.");
            logsToBeCleanedUp.Add("PayLikeTestOrProd is not defined in the database.");
            logsToBeCleanedUp.Add("Payment made by user with phone number ");
            logsToBeCleanedUp.Add("Payment Method is null in PaymentMethodChanged()");
            logsToBeCleanedUp.Add("Payment Methods is null in CurrencyChanged().");
            logsToBeCleanedUp.Add("Phone code ");
            logsToBeCleanedUp.Add("Phone Verification Code  is Incorrect for User ");
            logsToBeCleanedUp.Add("Phone Verification Code set to Null for User ");
            logsToBeCleanedUp.Add("Purchase currency is null in CurrencyChanged().");
            logsToBeCleanedUp.Add("Purchase Currency is null in PaymentMethodChanged()");
            logsToBeCleanedUp.Add("Reset IPInfo Session Data. IPInfoJSONData:");
            logsToBeCleanedUp.Add("Riskscore TrustMessage");
            logsToBeCleanedUp.Add("SendBTC Response. Response Content: ");
            logsToBeCleanedUp.Add("siteMerchantDetail is empty in GetYourPayApiToken for the site ");
            logsToBeCleanedUp.Add("siteMerchantDetail is empty in GetYourPayMerchantNumber for the site ");
            logsToBeCleanedUp.Add("SitePaymentMethodDetails is not defined in the database.");
            logsToBeCleanedUp.Add("Something went wrong, you need to provide KYC files.");
            logsToBeCleanedUp.Add("There is no Culture in ResolveCountry().");
            logsToBeCleanedUp.Add("There is no Languages in ResolveCulture(). ");
            logsToBeCleanedUp.Add("TrustCalculationExecution:\r\n");
            logsToBeCleanedUp.Add("TrustLevelCalculation:");
            logsToBeCleanedUp.Add("Tx-Secret Requested:");
            logsToBeCleanedUp.Add("Unable to find BTC record in Currency table in the database.");
            logsToBeCleanedUp.Add("Unable to find language resource for site ");
            logsToBeCleanedUp.Add("Unable to find Order Transaction record.");
            logsToBeCleanedUp.Add("Unable to get BTC exchange rates in GetEURExchangeRate().");
            logsToBeCleanedUp.Add("Unable to get BTC exchange rates.");
            logsToBeCleanedUp.Add("Unable to get Exchange rates in GetEURExchangeRate().");
            logsToBeCleanedUp.Add("Unable to get Exchange rates.");
            logsToBeCleanedUp.Add("Unable to get Open exchange rates in GetLatestExchangeRates().");
            logsToBeCleanedUp.Add("Unable to send email ");
            logsToBeCleanedUp.Add("Unable to send Push notification.\r\nError: ");
            logsToBeCleanedUp.Add("Updated Order ");
            logsToBeCleanedUp.Add("Updated Order Status at ProcessKYC() to ");
            logsToBeCleanedUp.Add("Updated Order(");
            logsToBeCleanedUp.Add("Updated phone verification code is null in BitcoinAddressConfirmationView(), for user phone number ");
            logsToBeCleanedUp.Add("Updated the Phone verifaction Code ");
            logsToBeCleanedUp.Add("Updated user PhoneVerificationCode to ");
            logsToBeCleanedUp.Add("Updating order by user with phone number ");
            logsToBeCleanedUp.Add("Uploaded credit card Kyc file for user Phone number ");
            logsToBeCleanedUp.Add("Uploaded Kyc file for user Phone number ");
            logsToBeCleanedUp.Add("User identity is null");
            logsToBeCleanedUp.Add("User identity is Null in CancelOrder().");
            logsToBeCleanedUp.Add("User identity is null in CreditCardKYCFileUpload().");
            logsToBeCleanedUp.Add("Useridentity is null.");
            logsToBeCleanedUp.Add("Verification code ");
            logsToBeCleanedUp.Add("Yourpay CapturePayment Error Response: ");
            logsToBeCleanedUp.Add("Yourpay CapturePayment Request: Order ExtRef:");
            logsToBeCleanedUp.Add("Yourpay CapturePayment Response: ");
            logsToBeCleanedUp.Add("Yourpay ReleasePayment Error Response: ");
            logsToBeCleanedUp.Add("Yourpay ReleasePayment Response: ");
            logsToBeCleanedUp.Add("YourPayProdDetails is not defined in the database.");
            logsToBeCleanedUp.Add("YourPayTestDetails is not defined in the database.");
            logsToBeCleanedUp.Add("YourPayTestOrProd is not defined in the database.");
            logsToBeCleanedUp.Add("YourPayProdDetails is not defined in the database.");
            logsToBeCleanedUp.Add("YourPayTestDetails is not defined in the database.");
            logsToBeCleanedUp.Add("YourPayTestOrProd is not defined in the database.");
        }

        public List<String> LogsToBeCleanedUp { get { return logsToBeCleanedUp; } }
    }
}
